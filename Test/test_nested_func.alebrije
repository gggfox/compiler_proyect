program MyRlike;

function void fib(int:prev, int:init, int: cont, int: num){
    while(cont < num){
        write(init);
        prev = init;
        init = init + prev;
        cont = cont + 1;
    }
}

function void fib_aux(int: num){
    vars{
        int: cont,prev,init;
    }
    cont = 0;
    prev = 0;
    init = 1;

    if(num < 0){
        write("error");
    }

    if(num == 1){
        write(init);
        num = num - 1;
    }else{
        fib(prev, init, cont,  num);
    }
} 
main(){
    fib_aux(6);    
}
    // 0:      (GOTO,_,28,_)
    // 1:      (GOTOF,num,9,_) <- antes de aqui deberia de ir un (<,cont,num,temp)
    // 2:      (WRITE,init,_,_)
    // 3:      (=,init,_,prev)
    // 4:      (+,init,prev,temp1)
    // 5:      (=,temp1,_,init)
    // 6:      (+,cont,1,temp2)
    // 7:      (=,temp2,_,cont)
    // 8:      (GOTO,_,1,_)
    // 9:      (ENDFUNC,_,_,_)
    // 10:     (=,0,_,cont)
    // 11:     (=,0,_,prev)
    // 12:     (=,1,_,init)
    // 13:     (GOTOF,0,15,_)
    // 14:     (WRITE,"error",_,_)
    // 15:     (==,num,1,temp1)
    // 16:     (GOTOF,temp1,21,_)
    // 17:     (WRITE,init,_,_)
    // 18:     (-,num,1,temp2)
    // 19:     (=,temp2,_,num)
    // 20:     (GOTO,_,27,_)
    // 21:     (ERA,fib,_,_)
    // 22:     (PARAM,prev,1,_)
    // 23:     (PARAM,init,2,_)
    // 24:     (PARAM,cont,3,_)
    // 25:     (PARAM,num,4,_)
    // 26:     (GOSUB,fib,26,_)
    // 27:     (ENDFUNC,_,_,_)
    // 28:     (ERA,fib_aux,_,_)
    // 29:     (PARAM,6,1,_)
    // 30:     (GOSUB,fib_aux,30,_)
    // 31:     (ENDPROG,_,_,_)